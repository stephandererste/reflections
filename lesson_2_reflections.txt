What happens when you initialize a repository? Why do you need to do it?

--it gets initialized in the folder without any commits or files to be tracked
--necessary infrastructure (invisible .git folder, etc.) gets added


How is the staging area different from the working directory and the repository? What value do you think it offers?

--it acts as a layer between working directory and repository
--it contains onlky the files you want to add to (or remove from) the repository from the working directory 


How can you use the staging area to make sure you have one commit per logical change?

--if you are working on seperate files within the repository which contain changes for different topics, you can only add files that logically belong together to the staging area before committing those changes


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

--if you want to add changes that are not directly connected to the master branch you can work on those independently in a seperate branch 


How do the diagrams help you visualize the branch structure?

--you can see which changes (commits) were made on each branch


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

--saves lots of work - sometimes fucks up 